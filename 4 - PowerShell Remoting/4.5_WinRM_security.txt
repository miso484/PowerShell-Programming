#
# PowerShell Remoting Security Considerations
#

#
# PowerShell Remoting default settings
#

HTTP Port:  5985
HTTPS Port: 5986

By default, PowerShell Remoting only allows connections from members of the Administrators group.

On private networks, the default Windows Firewall rule for PowerShell Remoting accepts all connections.
On public networks, the default Windows Firewall rule allows PowerShell Remoting connections only from within the same subnet.
Warning: The firewall rule for public networks is meant to protect the computer from potentially malicious external connection attempts. Use caution when removing this rule.

#
# Process isolation
#

PowerShell Remoting uses Windows Remote Management (WinRM) for communication between computers.
WinRM runs as a service under the Network Service account, and spawns isolated processes running as user accounts to host PowerShell instances.
An instance of PowerShell running as one user has no access to a process running an instance of PowerShell as another user.

#
# Event logs generated by PowerShell Remoting
#

https://www.fireeye.com/content/dam/fireeye-www/global/en/solutions/pdfs/wp-lazanciyan-investigating-powershell-attacks.pdf

#
# Encryption and transport protocols (Two perspectives: Initial authentication and ongoing communication)
#

All communications are always encrypted after initial authentication with a per-session AES-256 symmetric key.

# Initial authentication

Kerberos authentication protocol when a client connects to a domain server using its computer name.
    Kerberos guarantees both the user identity and server identity.
NTLM authentication protocol hen a client connects to a domain server using its IP address, or connects to a workgroup server. It uses session keys.
    The NTLM protocol does not, however, guarantee server identity. SSL certificates can be used to enable NTLM-based authentication that guarantees both the user identity and server identity.
NTLM-based authentication is disabled by default, but may be permitted by either configuring SSL on the target server, or by configuring the WinRM TrustedHosts setting on the client.

If deploying a SSL certificate to a server for NTLM connections is infeasible, you may suppress the resulting identity errors by adding the server to the WinRM TrustedHosts list. 
Please note that adding a server name to the TrustedHosts list should not be considered as any form of statement of the trustworthiness of the hosts themselves - as the NTLM authentication 
protocol cannot guarantee that you are in fact connecting to the host you are intending to connect to. 
Instead, you should consider the TrustedHosts setting to be the list of hosts for which you wish to suppress the error generated by being unable to verify the server's identity.

# Ongoing communication

Once initial authentication is complete, the PowerShell Remoting Protocol encrypts all ongoing communication with a per-session AES-256 symmetric key.